javascript:(function(){var e=document.createElement("canvas");e.width=window.innerWidth;e.height=window.innerHeight;e.style.position="fixed";e.style.top=0;e.style.left=0;e.style.pointerEvents="none";document.body.appendChild(e);var t=e.getContext("2d"),n=new Image;n.onload=function(){for(var r=[],a=30,i=0;i<a;i++)r.push({x:0,y:0,alpha:0});document.addEventListener("mousemove",function(e){r.unshift({x:e.clientX-15,y:e.clientY-15,alpha:.5});r.length>a&&r.pop()});function fadeTrail(){t.clearRect(0,0,e.width,e.height);for(var i=0;i<a;i++){var c=r[i];t.globalAlpha=c.alpha;t.drawImage(n,c.x,c.y,30,30);c.alpha=Math.max(0,c.alpha-.05)}requestAnimationFrame(fadeTrail)}requestAnimationFrame(fadeTrail)};n.src="https://imgsocket.glitch.me/img/YARg5SGP-p.png"})()

javascript:(function() {  const canvas = document.createElement('canvas');  canvas.width = window.innerWidth;  canvas.height = window.innerHeight;  canvas.style.top = 0;  canvas.style.left = 0;  canvas.style.position = 'fixed';  canvas.style.pointerEvents = 'none';  document.body.appendChild(canvas);  const context = canvas.getContext('2d');  const maxRadius = 20;  const minRadius = 2;  const maxAlpha = 0.5;  const minAlpha = 0.1;  const trailLength = 20;  const trail = [];  const img = new Image();  img.src = 'https://imgsocket.glitch.me/img/rwJtOREOkL.png'; function draw() { if (mouseX >= 0 && mouseX <= window.innerWidth && mouseY >= 0 && mouseY <= window.innerHeight) {      context.clearRect(0, 0, canvas.width, canvas.height);      trail.push({ x: mouseX, y: mouseY });      if (trail.length > trailLength) {        trail.shift();      }      for (let i = 0; i < trail.length; i++) {        const radius = minRadius + ((maxRadius - minRadius) / trailLength) * i;        const alpha = minAlpha + ((maxAlpha - minAlpha) / trailLength) * i;        context.globalAlpha = alpha;        context.drawImage(img, trail[i].x - radius / 2, trail[i].y - radius / 2, radius, radius);      }    }  }  let mouseX = 0;  let mouseY = 0;  document.addEventListener('mousemove', (event) => {    mouseX = event.clientX;    mouseY = event.clientY;  });  canvas.addEventListener('mousedown', (event) => {    event.stopPropagation();  });  function loop() {    draw();    requestAnimationFrame(loop);  }  loop();})();